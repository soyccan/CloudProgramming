apiVersion: v1
kind: Namespace
metadata:
  name: chord
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${NAME}
  namespace: chord
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app.kubernetes.io/name: chord
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chord
    spec:
      # if this is the chord leader, set hostname & subdomain to make this
      # pod discoverable by FQDN (leader.chord.my-namespace.svc.cluster.local)
      # remember to setup a headless service
      ${HOSTNAME_SUBDOMAIN}
      containers:
      - name: chord
        image: ${REGISTRY_URL}/chord/core/chord:latest
        ports:
        - containerPort: 5057
          name: chord
        env:
        - name: CHORD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          tcpSocket:
            port: chord
        readinessProbe:
          tcpSocket:
            port: chord
      - name: uploadserver
        image: ${REGISTRY_URL}/chord/core/uploadserver:latest
        ports:
        - containerPort: 5058
          name: uploadserver
        livenessProbe:
          tcpSocket:
            port: uploadserver
        readinessProbe:
          tcpSocket:
            port: uploadserver
      - name: init
        image: ${REGISTRY_URL}/chord/core/init:latest
        env:
        ${LEADER_ENV}
        - name: CHORD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        readinessProbe:
          exec:
            command: [ls, /workdir/init.done]
      affinity:
        # ensure pods land on separate hosts
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: [chord]
            topologyKey: kubernetes.io/hostname
